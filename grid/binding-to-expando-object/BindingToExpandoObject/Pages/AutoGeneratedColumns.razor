@page "/auto-generated-columns"

@using System.Dynamic;

@inject EmployeeService EmployeeService

<TelerikGrid Data="@GridData"
             Pageable="true"
             Sortable="true"
             Groupable="true"
             FilterMode="@GridFilterMode.FilterMenu">
    <GridColumns>
        @if (GridData != null && GridData.Any())
        {
            // this sample uses the first data item to create columns for all keys present in it
            // which assumes all items have the same keys in them. If this is not your case
            // you may want to create your own list of column descriptors or any other logic to define the columns

            var firstItem = GridData.First();
            var dictionaryItem = (IDictionary<string, object>)firstItem;

            var fields = dictionaryItem.Keys;

            foreach (var item in dictionaryItem)
            {
                <GridColumn Field="@item.Key" FieldType="@item.Value.GetType()"></GridColumn>
            }
        }
    </GridColumns>
</TelerikGrid>

@code { 
    public List<ExpandoObject> GridData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GridData = await EmployeeService.GetEmployeesAsync();
    } 

    // for sample CUD operations, see the main sample with the explicitly defined columns
}